# === Script de test - Validation du calcul du chiffre d'affaires (√©tape 05) ===
# Ce script v√©rifie la coh√©rence des tables `ca_par_produit` et `ca_total` :
# montant total, absence de valeurs nulles ou n√©gatives, nombre de lignes.

import duckdb
from pathlib import Path
from loguru import logger
import sys

# === Configuration du logger ===
logger.remove()
logger.add(sys.stdout, level="INFO", filter=lambda record: record["level"].name == "INFO")
logger.add(sys.stderr, level="WARNING")
LOGS_PATH = Path("logs")
LOGS_PATH.mkdir(parents=True, exist_ok=True)
logger.add(LOGS_PATH / "test_ca.log", level="INFO", rotation="500 KB")

# === Connexion √† la base DuckDB ===
try:
    con = duckdb.connect("data/bottleneck.duckdb")
    logger.info("üß™ Connexion √† DuckDB r√©ussie.")
except Exception as e:
    logger.error(f"‚ùå Connexion √©chou√©e : {e}")
    exit(1)

# === V√©rifications de coh√©rence CA ===
try:
    ca_total = con.execute("SELECT ca_total FROM ca_total").fetchone()[0]
    assert round(ca_total, 2) == 387837.60, f"‚ùå Montant CA incorrect : {ca_total} ‚Ç¨ (attendu : 387‚ÄØ837.60 ‚Ç¨)"
    logger.success(f"üí∞ CA total = {ca_total:,.2f} ‚Ç¨ ‚úÖ")

    # Nombre de produits comptabilis√©s
    nb_produits = con.execute("SELECT COUNT(*) FROM ca_par_produit").fetchone()[0]
    assert nb_produits == 573, f"‚ùå Nombre de lignes dans ca_par_produit incorrect : {nb_produits} (attendu : 573)"
    logger.success(f"üì¶ Produits comptabilis√©s : {nb_produits}")

    # V√©rification de l'absence de valeurs nulles ou n√©gatives
    nulls = con.execute("""
        SELECT COUNT(*) FROM ca_par_produit
        WHERE price IS NULL OR stock_quantity IS NULL OR chiffre_affaires IS NULL
    """).fetchone()[0]
    assert nulls == 0, f"‚ùå Valeurs nulles d√©tect√©es dans ca_par_produit : {nulls}"

    neg = con.execute("""
        SELECT COUNT(*) FROM ca_par_produit WHERE chiffre_affaires < 0
    """).fetchone()[0]
    assert neg == 0, f"‚ùå CA n√©gatif d√©tect√© sur {neg} ligne(s)"

    logger.success("‚úÖ Tests de coh√©rence CA valid√©s (pas de nulls ni de CA n√©gatif)")
    logger.success("üéâ Validation du calcul du CA r√©ussie.")

except Exception as e:
    logger.error(f"‚ùå Erreur dans les tests de chiffre d'affaires : {e}")
    exit(1)
